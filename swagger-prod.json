{
  "swagger": "2.0",
  "info": {
    "title": "CSE 341 Ecommerce",
    "description": "Final Project",
    "version": "1.0.0"
  },
  "host": "cse341-ecommerce-project.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "name": "Stores",
      "description": "Operations related to stores"
    },
    {
      "name": "Users",
      "description": "Operations related to users"
    },
    {
      "name": "Products",
      "description": "Operations related to products"
    },
    {
      "name": "Cart",
      "description": "Operations related to shopping cart"
    },
    {
      "name": "Orders",
      "description": "Operations related to orders"
    }
  ],
  "paths": {
    "/stores/": {
      "get": {
        "tags": [
          "Stores"
        ],
        "description": "Retrieve a list of all stores.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved stores list.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "address": { "type": "string" },
                  "phone": { "type": "string" },
                  "email": { "type": "string" },
                  "status": { "type": "string", "enum": ["open", "closed"] }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Stores"
        ],
        "description": "Create a new store.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "JSON object representing the new store.",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "Store Name" },
                "address": { "type": "string", "example": "123 Main St" },
                "phone": { "type": "string", "example": "123-456-7890" },
                "email": { "type": "string", "example": "store@example.com" },
                "status": { "type": "string", "enum": ["open", "closed"], "example": "open" }
              },
              "required": ["name", "address", "phone", "email", "status"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Store successfully created."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/stores/{id}": {
      "get": {
        "tags": [
          "Stores"
        ],
        "description": "Retrieve details of a specific store using its ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the store.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Store details retrieved successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "address": { "type": "string" },
                "phone": { "type": "string" },
                "email": { "type": "string" },
                "status": { "type": "string", "enum": ["open", "closed"] }
              }
            }
          },
          "404": {
            "description": "Store not found."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Stores"
        ],
        "description": "Update details of a specific store using its ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the store.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "JSON object containing updated store information.",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "Store Name" },
                "address": { "type": "string", "example": "123 Main St" },
                "phone": { "type": "string", "example": "123-456-7890" },
                "email": { "type": "string", "example": "store@example.com" },
                "status": { "type": "string", "enum": ["open", "closed"], "example": "open" }
              },
              "required": ["name", "address", "phone", "email", "status"]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Store updated successfully."
          },
          "400": {
            "description": "Bad request - Invalid store information."
          },
          "404": {
            "description": "Store not found."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Stores"
        ],
        "description": "Delete a specific store using its ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the store.",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Store deleted successfully."
          },
          "404": {
            "description": "Store not found."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Retrieve a list of all users.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved users list."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create a new user.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "JSON object representing the new user.",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "John" },
                "last_name": { "type": "string", "example": "Doe" },
                "email": { "type": "string", "example": "john.doe@example.com" },
                "role": { "type": "string", "enum": ["admin", "customer", "manager"], "example": "customer" }
              },
              "required": ["name", "last_name", "email", "role"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User successfully created."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Retrieve details of a specific user by ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the user.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved successfully."
          },
          "404": {
            "description": "User not found."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Update details of a specific user by ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the user.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "JSON object containing updated user information.",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "John" },
                "last_name": { "type": "string", "example": "Doe" },
                "email": { "type": "string", "example": "john.doe@example.com" },
                "role": { "type": "string", "enum": ["admin", "customer", "manager"], "example": "customer" }
              },
              "required": ["name", "last_name", "email", "role"]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User updated successfully."
          },
          "400": {
            "description": "Bad request - Invalid user information."
          },
          "404": {
            "description": "User not found."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Delete a specific user by ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the user.",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully."
          },
          "404": {
            "description": "User not found."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Retrieve a list of all products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved products list."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Create a new product.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "JSON object representing the new product.",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "Product Name" },
                "stock": { "type": "integer", "example": 100 },
                "description": { "type": "string", "example": "Product Description" },
                "brand": { "type": "string", "example": "Brand Name" },
                "category": { "type": "string", "example": "Category Name" }
              },
              "required": ["name", "stock", "description", "brand", "category"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product successfully created."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Retrieve details of a specific product by ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the product.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Product details retrieved successfully."
          },
          "404": {
            "description": "Product not found."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "description": "Update details of a specific product by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the product.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "JSON object containing updated product information.",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "Product Name" },
                "stock": { "type": "integer", "example": 100 },
                "description": { "type": "string", "example": "Product Description" },
                "brand": { "type": "string", "example": "Brand Name" },
                "category": { "type": "string", "example": "Category Name" }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Product updated successfully."
          },
          "404": {
            "description": "Product not found."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "description": "Delete a specific product by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the product.",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted successfully."
          },
          "404": {
            "description": "Product not found."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/cart/": {
      "get": {
        "tags": [
          "Cart"
        ],
        "description": "Retrieve details of the user's shopping cart.",
        "responses": {
          "200": {
            "description": "Successfully retrieved cart details."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Cart"
        ],
        "description": "Add items to the shopping cart.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "JSON object representing the cart items.",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": { "type": "string", "example": "User ID" },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "product_id": { "type": "string", "example": "Product ID" },
                      "quantity": { "type": "integer", "example": 1 }
                    }
                  }
                }
              },
              "required": ["user_id", "items"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Items added to cart successfully."
          },
          "400": {
            "description": "Bad request - Invalid cart data."
          }
        }
      }
    },
    "/cart/{id}": {
      "get": {
        "tags": [
          "Cart"
        ],
        "description": "Retrieve details of a specific cart by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the cart.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Cart details retrieved successfully."
          },
          "404": {
            "description": "Cart not found."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Cart"
        ],
        "description": "Update cart details by cart ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the cart.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Cart updated successfully."
          },
          "400": {
            "description": "Bad request - Invalid cart data."
          },
          "404": {
            "description": "Cart not found."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Cart"
        ],
        "description": "Delete a specific cart by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the cart.",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Cart deleted successfully."
          },
          "404": {
            "description": "Cart not found."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/orders/": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Retrieve a list of all orders.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved orders list."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "description": "Create a new order.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "JSON object representing the new order.",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": { "type": "string", "example": "any" },
                "amount": { "type": "number", "example": 100.0 },
                "status": { "type": "string", "example": "any" }
              },
              "required": ["amount", "cart_id"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Order successfully created."
          },
          "422": {
            "description": "Unprocessable entity - Invalid order data."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Retrieve details of a specific order by ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the order.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Order details retrieved successfully."
          },
          "400": {
            "description": "Bad request - Invalid order data."
          },
          "404": {
            "description": "Order not found."
          }
        }
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "description": "Update details of a specific order by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the order.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": { "type": "string", "example": "any" },
                "amount": { "type": "number", "example": 100.0 },
                "status": { "type": "string", "example": "any" }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Order updated successfully."
          },
          "400": {
            "description": "Bad request - Invalid order data."
          },
          "404": {
            "description": "Order not found."
          },
          "422": {
            "description": "Unprocessable entity - Invalid data format."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Orders"
        ],
        "description": "Delete a specific order by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the order.",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Order deleted successfully."
          },
          "400": {
            "description": "Bad request - Invalid order data."
          },
          "404": {
            "description": "Order not found."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}
